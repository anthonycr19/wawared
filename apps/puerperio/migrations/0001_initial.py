# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
from django.conf import settings
import django.core.validators


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('pacientes', '0026_auto_20160713_1108'),
        ('establecimientos', '0009_auto_20160705_1514'),
        ('cie', '0001_initial'),
        ('partos', '0001_initial'),
        ('embarazos', '0021_auto_20160915_1100'),
    ]

    operations = [
        migrations.CreateModel(
            name='EgresoGestante',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('fecha', models.DateField(verbose_name='Fecha')),
                ('hora', models.TimeField(verbose_name='Hora')),
                ('tipo', models.CharField(max_length=20, null=True, verbose_name='Egreso', choices=[('sano', 'Sano'), ('traslado', 'Traslado'), ('con patologia', 'Con patologia'), ('fallece', 'Fallece')])),
                ('establecimiento_traslado', models.CharField(max_length=50, null=True, verbose_name='Establecimiento traslado', blank=True)),
                ('diagnostico_str', models.CharField(max_length=255, null=True, editable=False)),
                ('diagnostico_traslado_str', models.CharField(max_length=255, null=True, editable=False)),
                ('diagnostico_fallecimiento_str', models.CharField(max_length=255, null=True, editable=False)),
                ('ant_ligadura_tubaria', models.BooleanField(default=False, verbose_name='Ligadura Tubaria')),
                ('ant_anticoncec_combinada', models.BooleanField(default=False, verbose_name='Anticoncec. Combinada')),
                ('ant_abstinencia_periodica', models.BooleanField(default=False, verbose_name='Abstinen. Periodica')),
                ('ant_mela', models.BooleanField(default=False, verbose_name='MELA')),
                ('ant_solo_ori_consej', models.BooleanField(default=False, verbose_name='Solo Ori/Consej')),
                ('ant_condon', models.BooleanField(default=False, verbose_name='Condon')),
                ('ant_inyectables', models.BooleanField(default=False, verbose_name='Progestag. Inyectables')),
                ('ant_ninguno', models.BooleanField(default=False, verbose_name='Ninguno')),
                ('ant_diu', models.BooleanField(default=False, verbose_name='DIU')),
                ('ant_orales', models.BooleanField(default=False, verbose_name='Progestag. Orales')),
                ('ant_otro', models.BooleanField(default=False, verbose_name='Otro')),
                ('cui', models.BooleanField(default=False, verbose_name='CUI')),
                ('seguro', models.BooleanField(default=False, verbose_name='Seguro')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(related_name='egreso_gestante_c', to=settings.AUTH_USER_MODEL)),
                ('diagnostico', models.ForeignKey(related_name='egreso_gestante_diagnostico', to='cie.ICD10Base')),
                ('diagnostico_fallecimiento', models.ForeignKey(related_name='egreso_gestante_diagnostico_fallecimiento', blank=True, to='cie.ICD10Base', null=True)),
                ('diagnostico_traslado', models.ForeignKey(related_name='egreso_gestante_diagnostico_traslado', blank=True, to='cie.ICD10Base', null=True)),
                ('establecimiento', models.ForeignKey(related_name='gestante_egresos', to='establecimientos.Establecimiento')),
                ('ingreso', models.OneToOneField(related_name='egreso_gestante', to='partos.Ingreso')),
                ('modifier', models.ForeignKey(related_name='egreso_gestante_m', to=settings.AUTH_USER_MODEL)),
                ('paciente', models.ForeignKey(related_name='gestante_egresos', to='pacientes.Paciente')),
                ('terminacion_embarazo', models.OneToOneField(related_name='egreso_gestante', to='partos.TerminacionEmbarazo')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='EgresoRecienNacido',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('diagnostico_str', models.CharField(max_length=255, null=True, editable=False)),
                ('diagnostico_traslado_str', models.CharField(max_length=255, null=True, editable=False)),
                ('diagnostico_fallecimiento_str', models.CharField(max_length=255, null=True, editable=False)),
                ('fecha', models.DateField(verbose_name='Fecha')),
                ('hora', models.TimeField(verbose_name='Hora')),
                ('tipo', models.CharField(max_length=20, verbose_name='Egreso', choices=[('sano', 'Sano'), ('traslado', 'Traslado'), ('con patologia', 'Con patologia'), ('fallece', 'Fallece')])),
                ('establecimiento_traslado', models.CharField(max_length=50, null=True, verbose_name='Establecimiento traslado', blank=True)),
                ('peso', models.FloatField(default=0, verbose_name='Peso')),
                ('cui', models.BooleanField(default=False, verbose_name='CUI')),
                ('seguro', models.BooleanField(default=False, verbose_name='Seguro')),
                ('tn_tsh', models.BooleanField(default=False, verbose_name='TSH')),
                ('tn_fibrosis', models.BooleanField(default=False, verbose_name='Fibrosis Quistica')),
                ('tn_fenilceto', models.BooleanField(default=False, verbose_name='Fenilceto nuria')),
                ('tn_hiperplasia', models.BooleanField(default=False, verbose_name='Hiperplasia Suprarrenal')),
                ('alimento_al_alta_lme', models.BooleanField(default=False, verbose_name='LME')),
                ('alimento_al_alta_artificial', models.BooleanField(default=False, verbose_name='Artificial')),
                ('alimento_al_alta_mixto', models.BooleanField(default=False, verbose_name='Mixto')),
                ('alimento_al_alta_no_aplica', models.BooleanField(default=False, verbose_name='No aplica')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(related_name='egresos_c', to=settings.AUTH_USER_MODEL)),
                ('diagnostico', models.ForeignKey(related_name='egreso_diagnostico', to='cie.ICD10Base')),
                ('diagnostico_fallecimiento', models.ForeignKey(related_name='egreso_diagnostico_fallecimiento', blank=True, to='cie.ICD10Base', null=True)),
                ('diagnostico_traslado', models.ForeignKey(related_name='egreso_diagnostico_traslado', blank=True, to='cie.ICD10Base', null=True)),
                ('establecimiento', models.ForeignKey(related_name='egreso_establecimiento', to='establecimientos.Establecimiento')),
                ('modifier', models.ForeignKey(related_name='egresos_m', to=settings.AUTH_USER_MODEL)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Monitoreo',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('status', models.CharField(default='abierto', max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(related_name='monitoreo_c', to=settings.AUTH_USER_MODEL)),
                ('embarazo', models.OneToOneField(related_name='monitoreos', to='embarazos.Embarazo')),
                ('modifier', models.ForeignKey(related_name='monitoreo_m', to=settings.AUTH_USER_MODEL)),
                ('paciente', models.ForeignKey(related_name='monitoreos', to='pacientes.Paciente')),
                ('terminacion_embarazo', models.OneToOneField(related_name='monitoreo_puerperio', to='partos.TerminacionEmbarazo')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MonitoreoMedicion',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('fecha', models.DateField(verbose_name='Fecha')),
                ('hora', models.TimeField(verbose_name='Hora')),
                ('presion_sistolica', models.SmallIntegerField(blank=True, null=True, verbose_name='Presion sistolica', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(300)])),
                ('presion_diastolica', models.SmallIntegerField(blank=True, null=True, verbose_name='Presion diastolica', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200)])),
                ('pulso', models.PositiveSmallIntegerField(blank=True, max_length=2, null=True, verbose_name='Pulso', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(400)])),
                ('frecuencia_respiratoria', models.SmallIntegerField(blank=True, null=True, verbose_name='Frecuencia respiratoria', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(180)])),
                ('temperatura', models.FloatField(blank=True, null=True, verbose_name='Temperatura', validators=[django.core.validators.MinValueValidator(25), django.core.validators.MaxValueValidator(50)])),
                ('mamas_pezon', models.CharField(max_length=10, null=True, verbose_name='Pezon', choices=[('formado', 'Formado'), ('umbilicado', 'Umbilicado'), ('plano', 'Plano')])),
                ('mamas_caracteristicas', models.CharField(max_length=11, null=True, verbose_name='Caracteristicas', choices=[('blandas', 'Blandas'), ('turgentes', 'Turgentes'), ('secretantes', 'Secretantes')])),
                ('utero_caracteristicas', models.CharField(max_length=12, null=True, verbose_name='Caracteristicas', choices=[('contraido', 'Contraido'), ('no contraido', 'No contraido')])),
                ('utero_ubicacion', models.CharField(max_length=30, null=True, verbose_name='Ubicacion', choices=[('3cm encima', 'A 3cm por encima'), ('2cm encima', 'A 2cm por encima'), ('1cm encima', 'A 1cm por encima'), ('nivel cicatriz', 'A nivel de la cicatriz'), ('1cm debajo', 'A 1cm por debajo'), ('2cm debajo', 'A 2cm por debajo'), ('3cm debajo', 'A 3cm por debajo')])),
                ('loquios_caracteristicas', models.CharField(max_length=14, null=True, verbose_name='Caracteristicas', choices=[('hematicos', 'Hematicos'), ('serohematicos', 'Sero-hematicos'), ('serosos', 'Serosos')])),
                ('loquios_cantidad', models.CharField(max_length=3, null=True, verbose_name='Cantidad', choices=[('+', '+'), ('++', '++'), ('+++', '+++')])),
                ('loquios_olor', models.CharField(max_length=10, null=True, verbose_name='Olor', choices=[('mal olor', 'Mal olor'), ('sin olor', 'Sin olor')])),
                ('episeotomia_tipo', models.CharField(max_length=30, null=True, verbose_name='Tipo', choices=[('medio lateral derecha', 'Medio lateral derecha'), ('medio lateral izquierda', 'Medio lateral izquierda'), ('con edema', 'Con edema'), ('dehisencia de herida', 'Dehisencia de herida')])),
                ('episeotomia_caracteristicas', models.CharField(max_length=30, null=True, verbose_name='Caracteristicas', choices=[('bordes afrontados', 'Bordes afrontados'), ('bordes no afrontados', 'Bordes no afrontados'), ('doloroso', 'Doloroso')])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(related_name='monitoreo_medicion_c', to=settings.AUTH_USER_MODEL)),
                ('establecimiento', models.ForeignKey(related_name='mediciones', to='establecimientos.Establecimiento')),
                ('modifier', models.ForeignKey(related_name='tmonitoreo_medicion_m', to=settings.AUTH_USER_MODEL)),
                ('monitoreo', models.ForeignKey(related_name='mediciones', to='puerperio.Monitoreo')),
            ],
            options={
                'ordering': ('fecha', 'hora'),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RecienNacido',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nombres', models.CharField(max_length=100, null=True, verbose_name='Nombres')),
                ('apellido_paterno', models.CharField(max_length=50, null=True, verbose_name='Apellido Paterno')),
                ('apellido_materno', models.CharField(max_length=50, null=True, verbose_name='Apellido Materno')),
                ('sexo', models.CharField(max_length=2, verbose_name='Sexo', choices=[('m', 'Masculino'), ('f', 'Femenino'), ('indeterminado', 'Indeterminado')])),
                ('peso', models.SmallIntegerField(verbose_name='Peso', validators=[django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(9999)])),
                ('vive', models.BooleanField(default=True, verbose_name='\xbfVive?')),
                ('temperatura', models.FloatField(verbose_name='Temperatura', validators=[django.core.validators.MinValueValidator(25), django.core.validators.MaxValueValidator(50)])),
                ('perimetro_cefalico', models.IntegerField(null=True, verbose_name='Per\xedmetro cef\xe1lico', blank=True)),
                ('perimetro_toraxico', models.IntegerField(null=True, verbose_name='Per\xedmetro tor\xe1xico', blank=True)),
                ('talla', models.FloatField(verbose_name='Talla')),
                ('edad_por_examen_fisico', models.SmallIntegerField(blank=True, null=True, verbose_name='Edad por examen f\xedsico', validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(99)])),
                ('peso_por_edad_gestacional', models.CharField(default='adecuado', max_length=20, verbose_name='Peso por edad gestacional', choices=[('adecuado', 'Adecuado'), ('peque\xf1o', 'Peque\xf1o'), ('grande', 'Grande')])),
                ('apgar_1', models.SmallIntegerField(blank=True, null=True, verbose_name="APGAR 1'", validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('apgar_5', models.SmallIntegerField(blank=True, null=True, verbose_name="APGAR 5'", validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('examen_fisico', models.CharField(default='normal', max_length=10, verbose_name='Examen F\xedsico', choices=[('normal', 'Normal'), ('anormal', 'Anormal')])),
                ('necropsia', models.NullBooleanField(default=None, verbose_name='Necropsia')),
                ('hospitalizacion', models.BooleanField(default=False, verbose_name='Hospitalizaci\xf3n')),
                ('tiene_egreso', models.BooleanField(default=False)),
                ('can_llanto_inmediato', models.BooleanField(default=False, verbose_name='Llanto inmediato')),
                ('can_cianotico', models.BooleanField(default=False, verbose_name='Cian\xf3tico')),
                ('can_palido', models.BooleanField(default=False, verbose_name='P\xe1lido')),
                ('can_pletorico', models.BooleanField(default=False, verbose_name='Plet\xf3rico')),
                ('can_flacido', models.BooleanField(default=False, verbose_name='Fl\xe1cido')),
                ('can_circular', models.BooleanField(default=False, verbose_name='Circular')),
                ('can_asfixia', models.BooleanField(default=False, verbose_name='Asfixia al nacer')),
                ('can_asfixia_severa', models.BooleanField(default=False, verbose_name='Asfixia severa')),
                ('can_impregnacion_meconial', models.BooleanField(default=False, verbose_name='Impregnaci\xf3n. Meconial')),
                ('can_caput', models.BooleanField(default=False, verbose_name='Caput')),
                ('can_cefalohematoma', models.BooleanField(default=False, verbose_name='Cefalohematoma')),
                ('can_edematoso', models.BooleanField(default=False, verbose_name='Edematoso')),
                ('can_ictericia', models.BooleanField(default=False, verbose_name='Ictericia')),
                ('tiene_malformaciones_congenitas', models.BooleanField(default=False, verbose_name='\xbfTiene malformaciones cong\xe9nitas?')),
                ('mc_sindrome_de_down', models.BooleanField(default=False, verbose_name='S\xedndrome de Down')),
                ('mc_siames', models.BooleanField(default=False, verbose_name='Siames')),
                ('mc_labio_leporino', models.BooleanField(default=False, verbose_name='Labio Leporino')),
                ('mc_paladar_rendido', models.BooleanField(default=False, verbose_name='Paladar rendido')),
                ('mc_polidactilia', models.BooleanField(default=False, verbose_name='Polidactilia')),
                ('ai_aspiracion_oro_nasal', models.BooleanField(default=False, verbose_name='Aspiraci\xf3n oro nasal')),
                ('ai_aspiracion_endotraqueal', models.BooleanField(default=False, verbose_name='Aspiraci\xf3n endotraqueal')),
                ('ai_ventilacion_asistida', models.BooleanField(default=False, verbose_name='Ventilaci\xf3n asistida')),
                ('ai_oxigeno', models.BooleanField(default=False, verbose_name='Oxigeno')),
                ('ai_masaje_cardiaco', models.BooleanField(default=False, verbose_name='Masaje cardiaco')),
                ('ai_bicarbonato', models.BooleanField(default=False, verbose_name='Bicarbonato')),
                ('ai_adrenalina', models.BooleanField(default=False, verbose_name='Adrenalina')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(related_name='recien_nacidos_c', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(related_name='recien_nacidos_m', to=settings.AUTH_USER_MODEL)),
                ('terminacion_embarazo', models.ForeignKey(related_name='recien_nacidos', to='partos.TerminacionEmbarazo')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.AddField(
            model_name='egresoreciennacido',
            name='recien_nacido',
            field=models.OneToOneField(related_name='egreso', to='puerperio.RecienNacido'),
            preserve_default=True,
        ),
    ]
