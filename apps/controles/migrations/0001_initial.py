# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import django.core.validators


class Migration(migrations.Migration):

    dependencies = [
        ('cie', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Control',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('numero', models.SmallIntegerField(default=0, editable=False)),
                ('atencion_fecha', models.DateField(verbose_name='Fecha de atencion')),
                ('atencion_hora', models.TimeField(verbose_name='Hora de atencion')),
                ('eg_fum', models.CharField(default=None, max_length=20, verbose_name='EG FUM', blank=True)),
                ('eg_ecografia', models.CharField(default=None, max_length=20, verbose_name='EG ecograf\xeda', blank=True)),
                ('eg_altura_uterina', models.CharField(default=None, max_length=20, verbose_name='EG altura uterina', blank=True)),
                ('eg_elegida', models.CharField(default=b'', max_length=20, verbose_name='EG escogida', blank=True, choices=[(b'fum', 'FUM'), (b'ecografia', 'Ecograf\xeda'), (b'altura uterina', 'Altura Uterina')])),
                ('edad_gestacional_semanas', models.CharField(max_length=5, null=True, blank=True)),
                ('fecha_probable_parto_fum', models.DateField(null=True, verbose_name='FPP FUM', blank=True)),
                ('fecha_probable_parto_ecografia', models.DateField(null=True, verbose_name='FPP ecografia', blank=True)),
                ('fecha_probable_parto_altura_uterina', models.DateField(null=True, verbose_name='FPP altura uterina', blank=True)),
                ('peso', models.FloatField(default=0, verbose_name='Peso actual', validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(300)])),
                ('imc', models.FloatField(verbose_name='IMC')),
                ('imc_clasificacion', models.CharField(max_length=20, null=True, verbose_name=b'IMC clasificacion', blank=True)),
                ('temperatura', models.FloatField(blank=True, null=True, verbose_name='Temperatura', validators=[django.core.validators.MinValueValidator(25), django.core.validators.MaxValueValidator(50)])),
                ('presion_sistolica', models.SmallIntegerField(blank=True, null=True, verbose_name='Presion sistolica', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(300)])),
                ('presion_diastolica', models.SmallIntegerField(blank=True, null=True, verbose_name='Presion diastolica', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200)])),
                ('frecuencia_respiratoria', models.SmallIntegerField(blank=True, null=True, verbose_name='Frecuencia respiratoria', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(180)])),
                ('altura_uterina', models.SmallIntegerField(blank=True, null=True, verbose_name='Altura uterina', validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(40)])),
                ('situacion', models.CharField(blank=True, max_length=20, null=True, verbose_name='Situacion', choices=[(b'l', b'Longitudinal'), (b't', b'Transversal'), (b'na', b'NA')])),
                ('presentacion', models.CharField(blank=True, max_length=20, null=True, verbose_name='Presentacion', choices=[(b'c', b'Cefalico'), (b'p', b'Podalico'), (b'na', b'NA')])),
                ('posicion', models.CharField(blank=True, max_length=20, null=True, verbose_name='Posicion', choices=[(b'd', b'Derecho'), (b'i', b'Izquierdo'), (b'na', b'NA')])),
                ('leopold', models.CharField(max_length=255, verbose_name=b'Leopold', blank=True)),
                ('fcf', models.SmallIntegerField(blank=True, max_length=3, null=True, verbose_name='FCF', validators=[django.core.validators.MinValueValidator(120), django.core.validators.MaxValueValidator(400)])),
                ('movimientos_fetales', models.CharField(blank=True, max_length=5, null=True, verbose_name='Movimientos fetales', choices=[(b'sm', b'Sin Movimiento'), (b'+', b'+'), (b'++', b'++'), (b'+++', b'+++'), (b'na', b'NA')])),
                ('dinamica_uterina', models.CharField(blank=True, max_length=5, null=True, verbose_name='Dinamica uterina', choices=[(b'sd', b'Sin Dinamica'), (b'+', b'+'), (b'++', b'++'), (b'+++', b'+++'), (b'na', b'NA')])),
                ('proteinuria_cualitativa', models.CharField(blank=True, max_length=5, null=True, verbose_name='proteurina cualitativa', choices=[(b'+', b'+'), (b'++', b'++'), (b'+++', b'+++'), (b'nsh', b'No Se Hizo')])),
                ('edemas', models.CharField(blank=True, max_length=5, null=True, verbose_name='Edemas', choices=[(b'se', b'Sin Edemas'), (b'+', b'+'), (b'++', b'++'), (b'+++', b'+++')])),
                ('reflejos', models.CharField(blank=True, max_length=20, null=True, verbose_name='Reflejos', choices=[(b'0', b'0'), (b'+', b'+'), (b'++', b'++'), (b'+++', b'+++')])),
                ('examen_pezon', models.CharField(blank=True, max_length=20, null=True, verbose_name='Examen pezon', choices=[(b'formado', b'Formado'), (b'no formado', b'No Formado'), (b'sin examen', b'Sin examen')])),
                ('indicacion_hierro', models.IntegerField(blank=True, null=True, verbose_name='Indicaci\xf3n de Sulfato Ferroso', validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(100)])),
                ('indicacion_calcio', models.IntegerField(blank=True, null=True, verbose_name='Indicacion Calcio', validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(100)])),
                ('indicacion_acido_folico', models.IntegerField(blank=True, null=True, verbose_name='Indic Ac. F\xf3lico', validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(100)])),
                ('indicacion_hierro_acido_folico', models.IntegerField(blank=True, null=True, verbose_name='Indicaci\xf3n de Sulfato Ferroso/Ac F\xf3lico (mayor o igual a 16 semanas)', validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(100)])),
                ('pulso', models.PositiveSmallIntegerField(blank=True, max_length=2, null=True, verbose_name='Pulso', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(400)])),
                ('oc_planificacion_familiar', models.BooleanField(default=False)),
                ('oc_its', models.BooleanField(default=False)),
                ('oc_nutricion', models.BooleanField(default=False)),
                ('oc_inmunizaciones', models.BooleanField(default=False)),
                ('oc_vih', models.BooleanField(default=False)),
                ('oc_tbc', models.BooleanField(default=False)),
                ('oc_no_se_hizo', models.BooleanField(default=False)),
                ('oc_no_aplica', models.BooleanField(default=False)),
                ('perfil_biofisico', models.CharField(blank=True, max_length=20, null=True, verbose_name='Perfil biofisico', choices=[(b'4', b'4'), (b'6', b'6'), (b'8', b'8'), (b'10', b'10'), (b'nsh', b'No se hizo'), (b'na', b'No aplica')])),
                ('proxima_cita', models.DateField(null=True, verbose_name='Pr\xf3xima cita')),
                ('numero_formato_sis', models.CharField(max_length=20, null=True, verbose_name='Numero formato SIS', blank=True)),
                ('asintomatica', models.BooleanField(default=False, verbose_name='Asintom\xe1tica')),
                ('visito_sintomas', models.BooleanField(default=False)),
                ('visito_diagnosticos', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['numero'],
                'verbose_name': 'Control',
                'verbose_name_plural': 'Controles',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Diagnostico',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('plan_trabajo', models.TextField(verbose_name='Plan de trabajo', blank=True)),
                ('tratamiento', models.TextField(verbose_name='Tratamiento', blank=True)),
                ('proxima_cita', models.DateField(null=True, verbose_name='Proxima cita')),
                ('examen_hemoglobina', models.BooleanField(default=False, verbose_name='Hemoglobina')),
                ('examen_hemograma', models.BooleanField(default=False, verbose_name='Hemograma')),
                ('examen_orina', models.BooleanField(default=False, verbose_name='Orina')),
                ('examen_glucosa', models.BooleanField(default=False, verbose_name='Glucosa')),
                ('examen_grupo_sanguineo', models.BooleanField(default=False, verbose_name='Grupo sanguineo')),
                ('examen_factor', models.BooleanField(default=False, verbose_name='Factor')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='DiagnosticoDetalle',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('tipo', models.CharField(max_length=1, verbose_name='Tipo', choices=[(b'D', 'D'), (b'P', 'P'), (b'R', 'R')])),
                ('observacion', models.CharField(max_length=200, null=True, blank=True)),
                ('laboratorio', models.CharField(max_length=100, verbose_name='Laboratorio')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('cie__nombre',),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ExamenFisico',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('piel_y_mucosas', models.CharField(default=b'n/a', max_length=20, blank=True, choices=[(b'conservado', 'Conservado'), (b'patologico', 'Patol\xf3gico'), (b'n/a', 'N/A')])),
                ('piel_y_mucosas_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('mamas', models.CharField(default=b'n/a', max_length=20, blank=True, choices=[(b'conservado', 'Conservado'), (b'patologico', 'Patol\xf3gico'), (b'n/a', 'N/A')])),
                ('mamas_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('respiratorio', models.CharField(default=b'n/a', max_length=20, blank=True, choices=[(b'conservado', 'Conservado'), (b'patologico', 'Patol\xf3gico'), (b'n/a', 'N/A')])),
                ('respiratorio_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('cardiovascular', models.CharField(default=b'n/a', max_length=20, blank=True, choices=[(b'conservado', 'Conservado'), (b'patologico', 'Patol\xf3gico'), (b'n/a', 'N/A')])),
                ('cardiovascular_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('odontologico', models.CharField(default=b'n/a', max_length=20, blank=True, choices=[(b'conservado', 'Conservado'), (b'patologico', 'Patol\xf3gico'), (b'n/a', 'N/A')])),
                ('odontologico_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('abdomen', models.CharField(default=b'n/a', max_length=20, blank=True, choices=[(b'conservado', 'Conservado'), (b'patologico', 'Patol\xf3gico'), (b'n/a', 'N/A')])),
                ('abdomen_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('urinario', models.CharField(default=b'n/a', max_length=20, blank=True, choices=[(b'conservado', 'Conservado'), (b'patologico', 'Patol\xf3gico'), (b'n/a', 'N/A')])),
                ('urinario_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('neurologico', models.CharField(default=b'n/a', max_length=20, blank=True, choices=[(b'conservado', 'Conservado'), (b'patologico', 'Patol\xf3gico'), (b'n/a', 'N/A')])),
                ('neurologico_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('nivel_conciencia', models.CharField(default=b'', max_length=20, verbose_name='Nivel de conciencia', blank=True, choices=[(b'', b'----'), (b'lucidez', 'Lucidez'), (b'obnubilacion', 'Obnubilacion'), (b'sopor', 'Sopor'), (b'coma', 'Coma'), (b'otros', 'Otros')])),
                ('nivel_conciencia_otros', models.CharField(max_length=200, null=True, verbose_name='Nivel Conciencia otros', blank=True)),
                ('especuloscopia_vagina', models.CharField(max_length=100, verbose_name='Vagina', blank=True)),
                ('especuloscopia_cervix', models.CharField(max_length=100, verbose_name='Cervix', blank=True)),
                ('especuloscopia_fondo_de_saco', models.CharField(max_length=100, verbose_name='Fondo de saco', blank=True)),
                ('especuloscopia_observaciones', models.CharField(max_length=100, verbose_name='Observaciones', blank=True)),
                ('tv_cambio_cervicales', models.NullBooleanField(default=None, verbose_name='Cambios cervicales')),
                ('tv_tb_aplica', models.BooleanField(default=False, verbose_name='\xbfAplica Test de Bishop?')),
                ('tv_tb_consistencia', models.SmallIntegerField(default=None, null=True, verbose_name='Consistencia', blank=True, choices=[(0, 'Dura'), (1, 'Media'), (2, 'Blanda')])),
                ('tv_tb_posicion', models.SmallIntegerField(default=None, null=True, verbose_name='Posici\xf3n', blank=True, choices=[(0, 'Posterior'), (1, 'Media'), (2, 'Anterior')])),
                ('tv_tb_borramiento', models.SmallIntegerField(default=None, null=True, verbose_name='Borramiento', blank=True, choices=[(0, '<30%'), (1, '<50%'), (2, '<70%'), (3, '<100%')])),
                ('tv_tb_dilatacion', models.SmallIntegerField(default=None, null=True, verbose_name='Dilataci\xf3n', blank=True, choices=[(0, '0'), (1, '1-2 cm'), (2, '3-4 cm'), (3, '5-6 cm')])),
                ('tv_tb_altura_presentacion', models.SmallIntegerField(default=None, null=True, verbose_name='Altura presentaci\xf3n', blank=True, choices=[(0, 'Libre (-3)'), (1, 'Insinuada (-2)'), (2, 'Fija (-1/0)'), (3, 'Encajada (+1/2)')])),
                ('tv_tb_resultado', models.SmallIntegerField(default=None, null=True, verbose_name='Escala de Bishop', blank=True)),
                ('tv_vagina', models.CharField(max_length=100, verbose_name='Vagina', blank=True)),
                ('tv_utero', models.CharField(max_length=100, verbose_name='Utero', blank=True)),
                ('tv_hallazgos', models.CharField(max_length=200, verbose_name='Hallazgos', blank=True)),
                ('tv_incorporacion', models.CharField(max_length=100, verbose_name='Incorporaci\xf3n', blank=True)),
                ('tv_liquido_anmiotico', models.CharField(max_length=100, verbose_name='L\xedquido anmiotico', blank=True)),
                ('tv_membranas', models.CharField(max_length=100, verbose_name='Membranas', blank=True)),
                ('tv_otros', models.CharField(max_length=200, verbose_name='Anexos', blank=True)),
                ('pelvimetria', models.CharField(default=b'n/a', max_length=20, verbose_name='Pelvimetr\xeda', choices=[(b'adecuada', 'Adecuada'), (b'pelvis estrecha', 'Pelvis estrecha'), (b'n/a', 'N/A')])),
                ('pelvimetria_observacion', models.CharField(max_length=100, verbose_name='Observacion', blank=True)),
                ('eg_dolor', models.CharField(default=b'n/a', max_length=20, verbose_name='Dolor', blank=True, choices=[(b'leve', 'Leve'), (b'moderado', 'Moderado'), (b'severo', 'Severo'), (b'n/a', 'N/A')])),
                ('eg_posicion', models.CharField(default=b'n/a', max_length=20, verbose_name='Posicion', blank=True, choices=[(b'anteversoflexo', 'Anteversoflexo'), (b'medio', 'Medio'), (b'retroversoflexo', 'Retroversoflexo'), (b'n/a', 'N/A')])),
                ('eg_restos', models.CharField(default=b'n/a', max_length=20, verbose_name='Restos', blank=True, choices=[(b'escasos', 'Escasos'), (b'regular', 'Regular'), (b'abundante', 'Abundante'), (b'n/a', 'N/A')])),
                ('eg_culdocentesis', models.NullBooleanField(default=None, verbose_name='Culdocentesis')),
                ('eg_fondo_de_saco', models.CharField(default=b'n/a', max_length=20, verbose_name='Fondo de saco', blank=True, choices=[(b'libre', 'Libre'), (b'ocupado', 'Ocupado'), (b'n/a', 'N/A')])),
                ('eg_mal_olor', models.NullBooleanField(default=None, verbose_name='Mal olor')),
                ('eg_vulvas', models.CharField(max_length=200, verbose_name='Vulva', blank=True)),
                ('eg_genitales_externos', models.CharField(max_length=200, verbose_name='Genitales externos', blank=True)),
                ('eg_vagina', models.CharField(max_length=200, verbose_name='Vagina', blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ExamenLaboratorio',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nombre', models.CharField(unique=True, max_length=200, verbose_name='Nombre')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Laboratorio',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('grupo', models.CharField(blank=True, max_length=2, null=True, verbose_name='Grupo', choices=[(b'A', b'A'), (b'B', b'B'), (b'AB', b'AB'), (b'O', b'O')])),
                ('factor', models.CharField(blank=True, max_length=10, null=True, verbose_name='Factor RH', choices=[(b'+', b'+'), (b'- sen desc', b'- Sen Desc'), (b'- no sen', b'- No Sen'), (b'- sen', b'- Sen')])),
                ('rapida_hemoglobina', models.NullBooleanField(default=None, verbose_name='Prueba r\xe1pida de hemoglobina')),
                ('rapida_hemoglobina_resultado', models.FloatField(default=None, null=True, verbose_name='Prueba r\xe1pida de hemoglobina', blank=True)),
                ('rapida_hemoglobina_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('hemoglobina_1', models.NullBooleanField(default=None, verbose_name='Hemoglobina 1')),
                ('hemoglobina_1_resultado', models.FloatField(default=None, null=True, verbose_name='Hemoglobina 1', blank=True)),
                ('hemoglobina_1_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('hemoglobina_2', models.NullBooleanField(default=None, verbose_name='Hemoglobina 2')),
                ('hemoglobina_2_resultado', models.FloatField(default=None, null=True, verbose_name='Hemoglobina 2 resultado', blank=True)),
                ('hemoglobina_2_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('hemoglobina_alta', models.NullBooleanField(default=None, verbose_name='Hemoglobina al alta')),
                ('hemoglobina_alta_resultado', models.FloatField(default=None, null=True, verbose_name='Hemoglobina alta resultado', blank=True)),
                ('hemoglobina_alta_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('glicemia_1', models.CharField(default=b'no se hizo', max_length=20, verbose_name='Glicemia 1', choices=[(b'normal', 'Normal'), (b'anormal', 'Anormal'), (b'no se hizo', 'No se hizo')])),
                ('glicemia_1_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('glicemia_1_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('glicemia_2', models.CharField(default=b'no se hizo', max_length=20, verbose_name='Glicemia 2', choices=[(b'normal', 'Normal'), (b'anormal', 'Anormal'), (b'no se hizo', 'No se hizo')])),
                ('glicemia_2_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('glicemia_2_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('tolerancia_glucosa', models.CharField(default=b'no aplica', max_length=20, verbose_name='Tolerancia glucosa', choices=[(b'normal', 'Normal'), (b'anormal', 'Anormal'), (b'no se hizo', 'No se hizo'), (b'no aplica', 'No aplica')])),
                ('tolerancia_glucosa_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('tolerancia_glucosa_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('vdrl_rp_1', models.CharField(default=b'no se hizo', max_length=20, verbose_name='VDRL/RPR 1', choices=[(b'reactivo', 'Reactivo'), (b'no reactivo', 'No reactivo'), (b'no se hizo', 'No se hizo')])),
                ('vdrl_rp_1_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('vdrl_rp_1_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('vdrl_rp_2', models.CharField(default=b'no aplica', max_length=20, verbose_name='VDRL/RPR 2', choices=[(b'reactivo', 'Reactivo'), (b'no reactivo', 'No reactivo'), (b'no se hizo', 'No se hizo'), (b'no aplica', 'No aplica')])),
                ('vdrl_rp_2_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('vdrl_rp_2_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('fta_abs', models.CharField(default=b'no aplica', max_length=20, verbose_name='FTA Abs', choices=[(b'reactivo', 'Reactivo'), (b'no reactivo', 'No reactivo'), (b'no se hizo', 'No se hizo'), (b'no aplica', 'No aplica')])),
                ('fta_abs_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('fta_abs_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('tpha', models.CharField(default=b'no aplica', max_length=20, verbose_name='TPHA', choices=[(b'reactivo', 'Reactivo'), (b'no reactivo', 'No reactivo'), (b'no se hizo', 'No se hizo'), (b'no aplica', 'No aplica')])),
                ('tpha_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('tpha_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('rapida_sifilis', models.CharField(default=b'no se hizo', max_length=20, verbose_name='R\xe1pida s\xedfilis', choices=[(b'reactivo', 'Reactivo'), (b'no reactivo', 'No reactivo'), (b'no se hizo', 'No se hizo')])),
                ('rapida_sifilis_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('rapida_sifilis_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('rapida_sifilis_2', models.CharField(default=b'no se hizo', max_length=20, verbose_name='R\xe1pida s\xedfilis', choices=[(b'reactivo', 'Reactivo'), (b'no reactivo', 'No reactivo'), (b'no se hizo', 'No se hizo')])),
                ('rapida_sifilis_2_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('rapida_sifilis_2_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('rapida_vih_1', models.CharField(default=b'no se hizo', max_length=20, verbose_name='R\xe1pida VIH 1', choices=[(b'reactivo', 'Reactivo'), (b'no reactivo', 'No reactivo'), (b'no se hizo', 'No se hizo')])),
                ('rapida_vih_1_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('rapida_vih_1_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('rapida_vih_2', models.CharField(default=b'no aplica', max_length=20, verbose_name='R\xe1pida VIH 2', choices=[(b'reactivo', 'Reactivo'), (b'no reactivo', 'No reactivo'), (b'no se hizo', 'No se hizo'), (b'no aplica', 'No aplica')])),
                ('rapida_vih_2_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('rapida_vih_2_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('elisa', models.CharField(default=b'no aplica', max_length=20, verbose_name='ELISA', choices=[(b'reactivo', 'Reactivo'), (b'no reactivo', 'No reactivo'), (b'no se hizo', 'No se hizo'), (b'no aplica', 'No aplica')])),
                ('elisa_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('elisa_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('ifi_western_blot', models.CharField(default=b'no aplica', max_length=20, verbose_name='IFI/Western Blot', choices=[(b'positivo', 'Positivo'), (b'negativo', 'Negativo'), (b'no se hizo', 'No se hizo'), (b'no aplica', 'No aplica')])),
                ('ifi_western_blot_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('ifi_western_blot_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('htlv_1', models.CharField(default=b'no aplica', max_length=20, verbose_name='HTLV 1', choices=[(b'positivo', 'Positivo'), (b'negativo', 'Negativo'), (b'no se hizo', 'No se hizo'), (b'no aplica', 'No aplica')])),
                ('htlv_1_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('htlv_1_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('torch', models.CharField(default=b'no aplica', max_length=20, verbose_name='Torch', choices=[(b'positivo', 'Positivo'), (b'negativo', 'Negativo'), (b'no se hizo', 'No se hizo'), (b'no aplica', 'No aplica')])),
                ('torch_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('torch_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('gota_gruesa', models.CharField(default=b'no aplica', max_length=20, verbose_name='Gota gruesa', choices=[(b'positivo', 'Positivo'), (b'negativo', 'Negativo'), (b'no se hizo', 'No se hizo'), (b'no aplica', 'No aplica')])),
                ('gota_gruesa_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('gota_gruesa_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('malaria_prueba_rapida', models.CharField(default=b'no aplica', max_length=20, verbose_name='Malaria prueba r\xe1pida', choices=[(b'positivo', 'Positivo'), (b'negativo', 'Negativo'), (b'no se hizo', 'No se hizo'), (b'no aplica', 'No aplica')])),
                ('malaria_prueba_rapida_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('malaria_prueba_rapida_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('fluorencia_malaria', models.CharField(default=b'no aplica', max_length=20, verbose_name='Fluorescencia malaria', choices=[(b'positivo', 'Positivo'), (b'negativo', 'Negativo'), (b'no se hizo', 'No se hizo'), (b'no aplica', 'No aplica')])),
                ('fluorencia_malaria_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('fluorencia_malaria_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('examen_completo_orina_1', models.CharField(default=b'no se hizo', max_length=20, verbose_name='Examen completo de orina 1', choices=[(b'positivo', 'Positivo'), (b'negativo', 'Negativo'), (b'no se hizo', 'No se hizo')])),
                ('examen_completo_orina_fecha_1', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('examen_completo_orina_observacion_1', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('examen_completo_orina_2', models.CharField(default=b'no se hizo', max_length=20, verbose_name='Examen completo de orina 2', choices=[(b'positivo', 'Positivo'), (b'negativo', 'Negativo'), (b'no se hizo', 'No se hizo')])),
                ('examen_completo_orina_fecha_2', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('examen_completo_orina_observacion_2', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('leucocituria', models.CharField(default=b'no se hizo', max_length=20, verbose_name='Leucocituria', choices=[(b'positivo', 'Positivo'), (b'negativo', 'Negativo'), (b'no se hizo', 'No se hizo')])),
                ('leucocituria_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('leucocituria_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('nitritos', models.CharField(default=b'no se hizo', max_length=20, verbose_name='Nitritos', choices=[(b'positivo', 'Positivo'), (b'negativo', 'Negativo'), (b'no se hizo', 'No se hizo')])),
                ('nitritos_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('nitritos_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('urocultivo', models.CharField(default=b'no aplica', max_length=20, verbose_name='Urocultivo', choices=[(b'positivo', 'Positivo'), (b'negativo', 'Negativo'), (b'no se hizo', 'No se hizo'), (b'no aplica', 'No aplica')])),
                ('urocultivo_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('urocultivo_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('bk_en_esputo', models.CharField(default=b'no aplica', max_length=20, verbose_name='BK en esputo', choices=[(b'positivo', 'Positivo'), (b'negativo', 'Negativo'), (b'no se hizo', 'No se hizo'), (b'no aplica', 'No aplica')])),
                ('bk_en_esputo_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('bk_en_esputo_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('listeria', models.CharField(default=b'no aplica', max_length=20, verbose_name='Listeria', choices=[(b'positivo', 'Positivo'), (b'negativo', 'Negativo'), (b'no se hizo', 'No se hizo'), (b'no aplica', 'No aplica')])),
                ('listeria_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('listeria_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('tamizaje_hepatitis_b', models.CharField(default=b'no aplica', max_length=20, verbose_name='Tamizaje hepatitis B', choices=[(b'positivo', 'Positivo'), (b'negativo', 'Negativo'), (b'no se hizo', 'No se hizo'), (b'no aplica', 'No aplica')])),
                ('tamizaje_hepatitis_b_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('tamizaje_hepatitis_b_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('pap', models.CharField(default=b'no se hizo', max_length=20, verbose_name='PAP', choices=[(b'normal', 'Normal'), (b'anormal', 'Anormal'), (b'no se hizo', 'No se hizo')])),
                ('pap_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('pap_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('iva', models.CharField(default=b'no aplica', max_length=20, verbose_name='IVA', choices=[(b'normal', 'Normal'), (b'anormal', 'Anormal'), (b'no se hizo', 'No se hizo'), (b'no aplica', 'No aplica')])),
                ('iva_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('iva_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('colposcopia', models.CharField(default=b'no aplica', max_length=20, verbose_name='Colposcopia', choices=[(b'normal', 'Normal'), (b'anormal', 'Anormal'), (b'no se hizo', 'No se hizo'), (b'no aplica', 'No aplica')])),
                ('colposcopia_fecha', models.DateField(null=True, verbose_name='Fecha', blank=True)),
                ('colposcopia_observacion', models.CharField(max_length=200, verbose_name='Observacion', blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Sintoma',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('observacion', models.CharField(default=None, max_length=200, null=True, verbose_name='Observaci\xf3n', blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('cie', models.ForeignKey(to='cie.ICD10')),
                ('control', models.ForeignKey(related_name='sintomas', to='controles.Control')),
            ],
            options={
                'ordering': ('cie__nombre_mostrar', 'cie__nombre'),
            },
            bases=(models.Model,),
        ),
    ]
